<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGlpaUSAgICZgoKCmYKC
        gpmCgoKZgoKCmYKCgpmCgoKZWlRUWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABtZF3L1uLh/7vC
        w/+zubn/s7m5/7O5uf+zubn/srm4/2BcWXUAAAAAAAAAAAAAAAAAAAAAZGFhXIyPjcmIiYnOjXZi+ZF3
        ZP6fkoT8n5KE/J+ShPyfkIL2oJKD7aCSg+1tYFm0AAAAAAAAAAAAAAAAAAAAAE1DYtGOjZ7zmJqg9pmB
        bP6/m3z/8d/H//Hfx//x38f/8d/H//Hfx//x38f/jH1wnwAAAAAAAAAAAAAAAAAAAABbS5zJYlG+/4px
        1/+YfHX/v5t8//Hfx//x38f/8d/H//Hfx//x38f/8d/H/4x9cJ8AAAAAAAAAAAAAAAAAAAAAW0ucyWhW
        z/+YfvP/mn55/7+bfP/x38f/8d/H//Hfx//x38f/8d/H//Hfx/+MfXCfAAAAAAAAAAAAAAAAAAAAAFtL
        nMloVs//mH7z/5p+ef+/m3z/8d/H/7iagP+ykHT/spB0/7iagP/x38f/jH1wnwAAAAAAAAAAAAAAAAAA
        AABbS5zJaFbP/5h+8/+afnn/xqKB//Hfx/+0kXT/soln/7KJZ//JqIr/8d/H/4x9cJ8AAAAAAAAAAAAA
        AAAAAAAAW0ucyWhWz/+YfvP/mn55/8Off//x38f/3Mq1/9fFsP/XxbD/7dzE//Hfx/+MfXCfAAAAAAAA
        AAAAAAAAAAAAAFtLnMlsWt7/mH7z/452of+bgnn/n4+X/5+Pl/+fj5f/mYqE8aCSgtKfkYHPcmVbZQAA
        AAAAAAAAAAAAAAAAAABbSZrEaljY/5h+8/+YfvP/mH7z/5h+8/+YfvP/mH7z/2ZTkbIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAUj6APlpKlcFfToSkX06EpF9OhKRfToSkX06EpF9OhKRTQmdNAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA/AcAAPgHAADgAwAAwAMAAMADAADAAwAAwAMAAMAD
        AADAAwAAwAcAAMAfAADgPwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMwUoICAgLR4eIi0eHiItHh4iLR4eIi0eHiItHh4iLR4eIi0e
        HiItHh4iLR4eIi0eHiItHh4iLR4eIi0eHiIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoGxsTTEZG2ImKieyMjo3tjI6N7YyOje2Mjo3tjI6N7YyO
        je2Mjo3tjI6N7YyOje2Mjo3tjI6N7YyOje2Mjo3tOzMx6icnJw0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwxLpGssbH+2OPk/7rDwv+6w8L/usPC/7rD
        wv+6w8L/usPC/7rDwv+6w8L/usPC/7rDwv+6w8L/usPC/7S7u/9KQT+3AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASz42ql1TTfni7/D/7/3+/83X
        1/+ttLP/rbSz/620s/+ttLP/rbSz/620s/+ttLP/rbSz/620s/+ttLP/rLKy/0hDQs0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPzYxOUpDQbtIQD/GSEA/xkhAP8ZQRD3mfWJN/2dT
        RP9TRT7+Wk5I/lpOSP5aTkj+Wk5I/lpOSP5aTkj+Wk5I/ltPSPpbT0n5W09J+VtPSflbT0n5Qjgz+igj
        HzoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQkJA5YVFLh3uvs/7rDwv+6w8L/usPC/4B7
        df+xiWb/0qJ4/6iQef/x38f/8d/H//Hfx//x38f/8d/H//Hfx//x38f/8d/H//Hfx//x38f/8d/H//Hf
        x/+ThXfuLSMeMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCIeTFROVPXv/f7/7/3+/93o
        6f+ttLP/enVv/7GJZv/Sonj/qJB5//Hfx//x38f/8d/H//Hfx//x38f/8d/H//Hfx//x38f/8d/H//Hf
        x//x38f/8d/H/5OFd+4tIx4zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtIx4zMyk3/k9G
        XvhbVGL3Xlhf9l5YX/ZYTUv7sYlm/9KieP+okHn/8d/H//Hfx//x38f/8d/H//Hfx//x38f/8d/H//Hf
        x//x38f/8d/H//Hfx//x38f/k4V37i0jHjMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0j
        HjNSRJT9Y1TX/1dHkf+DbMj/g2zI/2hWeP+xiWb/0qJ4/6iQef/x38f/8d/H//Hfx//x38f/8d/H//Hf
        x//x38f/8d/H//Hfx//x38f/8d/H//Hfx/+ThXfuLSMeMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALSMeM1JElP1sW/H/YVGt/5h+8/+YfvP/cV6K/7GJZv/Sonj/qJB5//Hfx//x38f/8d/H//Hf
        x//x38f/8d/H//Hfx//x38f/8d/H//Hfx//x38f/8d/H/5OFd+4tIx4zAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAtIx4zUkSU/Wxb8f9hUa3/mH7z/5h+8/9xXor/sYlm/9KieP+okHn/8d/H//Hf
        x//x38f/8d/H//Hfx//x38f/8d/H//Hfx//x38f/8d/H//Hfx//x38f/k4V37i0jHjMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0jHjNSRJT9bFvx/2FRrf+YfvP/mH7z/3Feiv+xiWb/0qJ4/6iQ
        ef/x38f/8d/H//Hfx//x38f/8d/H//Hfx//x38f/8d/H//Hfx//x38f/8d/H//Hfx/+ThXfuLSMeMwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALSMeM1JElP1sW/H/YVGt/5h+8/+YfvP/cV6K/7GJ
        Zv/Sonj/qJB5//Hfx//x38f/rJiE/6WNdv+ljXb/pY12/6WNdv+ljXb/pY12/6yYhP/x38f/8d/H/5OF
        d+4tIx4zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtIx4zUkSU/Wxb8f9hUa3/mH7z/5h+
        8/9xXor/sYlm/9KieP+okHn/8d/H//Hfx/+njXX/0qJ4/7SLaP+lgGD/pYBg/7SLaP/Sonj/p411//Hf
        x//x38f/k4V37i0jHjMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0jHjNSRJT9bFvx/2FR
        rf+YfvP/mH7z/3Feiv+xiWb/0qJ4/6iQef/x38f/8d/H/6eNdf/BlG7/mnda/5p3Wv+ad1r/mnda/8GU
        bv+njXX/8d/H//Hfx/+ThXfuLSMeMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALSMeM1JE
        lP1sW/H/YVGt/5h+8/+YfvP/cV6K/7GJZv/Sonj/yq6R//Hfx//x38f/noVv/7yQbP+8kGz/vJBs/7yQ
        bP+8kGz/0qqF/+jSuf/x38f/8d/H/5OFd+4tIx4zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAtIx4zUkSU/Wxb8f9hUa3/mH7z/5h+8/9xXor/sYlm/9KieP+2nIP/8d/H//Hfx//byrT/yrml/8q5
        pf/KuaX/yrml/8q5pf/m1L3/8d/H//Hfx//x38f/k4V37i0jHjMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAC0jHjNSRJT9bFvx/2FRrf+YfvP/mH7z/3Jdi/+wiGb/0qJ4/6mRe//x38f/8d/H//Hf
        x//x38f/8d/H//Hfx//x38f/8d/H//Hfx//x38f/8d/H//Hfx/+ThXfuLSMeMwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAALSMeM1JElP1sW/H/YVGw/5h+8/+YfvP/f2q//4BlUv/Sonj/4cKj//Hf
        x//x38f/8d/H//Hfx//x38f/8d/H//Hfx//x38f/8d/H//Hfx//x38f/7dzE/2lcU+YvHBwbAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtIx4zUkSU/Wxb8f90YeH/mH7z/5h+8/+YfvP/e2ak/19O
        Vv9dTVr/W01g/1tNYP9bTWD/W01g/1tNYP9bTWD/V0lY/0o+POZMQTzMTEE8zExBPMxKQDnIPzgwZQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0jHjNSRJT9bFvx/2FRrf+YfvP/mH7z/5h+
        8/+YfvP/mH7z/5h+8/+YfvP/mH7z/5h+8/+YfvP/mH7z/5h+8/+DbMj/OS09ggAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALiEhJ05AhvtsW/H/bFvM/5h+
        8/+YfvP/mH7z/5h+8/+YfvP/mH7z/5h+8/+YfvP/mH7z/5h+8/+YfvP/mH7z/4Bqxv84Kzp8AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPzNRz05A
        iPxbS5z7alea9WpXmvVqV5r1alea9WpXmvVqV5r1alea9WpXmvVqV5r1alea9WpXmvVpVpjzRTZQ3i8i
        IiYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABLh8fIS0jHjMtIx4zLSMeMy0jHjMtIx4zLSMeMy0jHjMtIx4zLSMeMy0jHjMtIx4zLSMeMysg
        IDAtHh4RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////////+AAH//AAB//wAAf/AAAH/gA
        AB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAP/gA
        A//4AAf/+AAH////////////////////////////
</value>
  </data>
</root>